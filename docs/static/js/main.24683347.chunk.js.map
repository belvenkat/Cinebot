{"version":3,"sources":["controls.js","MovieCard.js","getFilteredMovies.js","App.js","index.js"],"names":["funFacts","english","telugu","hindi","getRandomFunFact","language","funFactsBasedonLanguage","Math","floor","random","length","controls","start","response","options","label","gotoKey","contronType","startover","user_name","user_age","recommend_a_movie","english_action","recommendations","english_drama","english_scifi","english_fantasy","english_adventure","english_comedy","english_romance","english_crime","english_animation","english_thriller","english_biography","english_all_movies","telugu_action","telugu_drama","telugu_scifi","telugu_fantasy","telugu_adventure","telugu_comedy","telugu_romance","telugu_crime","telugu_thriller","telugu_biography","telugu_all_movies","hindi_action","hindi_drama","hindi_scifi","hindi_fantasy","hindi_adventure","hindi_comedy","hindi_romance","hindi_crime","hindi_musical","hindi_thriller","hindi_biography","hindi_suspense","hindi_all_movies","Text","Typography","MovieDetails","Title","value","style","display","flex","justifyContent","MovieCard","selectedMovie","actor_name","category","genres","imdb_rating","music_director","actress_name","ott_paltform","certification","director","name","year","storyline","posterURL","platforms","platform_links","parsedPlatforms","split","parsedPlatformLinks","makeOttLinks","map","platform","index","link","console","log","flexDirection","fontSize","margin","backgroundColor","alignItems","width","src","padding","href","target","ottIcons","size","borderLeft","alignSelf","getFilteredMoviesByAge","movies","age","filter","movie","toLowerCase","Meta","Card","App","useState","text","isBot","chatMessages","setChatMessages","userDetails","setUserDetails","inputRef","useRef","message","setMessage","setSelectedMovie","isModalOpen","setIsModalOpen","bottomRef","setRecommendations","useEffect","current","focus","cursor","scrollIntoView","behavior","fetchFromDatabase","url","fetch","then","res","json","filteredMovies","filtersApplied","each","param","replace","seletedGenre","Object","assign","indexOf","sort","getFilteredMovies","keys","key","getFormattedResponse","handleSelection","botResponse","userResponse","window","scrollTo","bottom","handleOk","className","textAlign","open","onOk","onCancel","footer","onClick","shape","ref","type","zIndex","flexWrap","marginLeft","option","placeholder","borderBottomColor","borderBottomWidth","borderRight","borderTop","outline","onPressEnter","e","onChange","isNaN","handleUserTextInput","background","overflowX","cover","height","alt","title","description","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.24683347.chunk.js","sourcesContent":["const funFacts = {\r\n  english: [\r\n    \" WHEN WAS FILM INVENTED? THE 1890S\",\r\n    \"THE EARLIEST SHORT FILMS WERE SOMETIMES ACCOMPANIED BY BANDS\",\r\n    \"THE PANORAMA SHOT WAS DEVELOPED IN 1987\",\r\n    \"EARLY CAMERAS FILMED AT 16 FRAMES PER SECOND (FPS)\",\r\n    \"13 FRAMES PER SECOND IS THE SLOWEST SPEED THE HUMAN BRAIN WILL PROCESS IMAGES CONSECUTIVELY\",\r\n  ],\r\n  telugu: [\r\n    \"THE FIRST FEATURE-LENGTH FILM WAS PRODUCED IN 1906\",\r\n    \"Chiranjeevi Is The First Tollywood And South Indian actor To Be Called For Oscar Awards Presentation \",\r\n    \"Brahmanandam into Guiness World Records. Brahmanandam, a legendry actor cum comedian of telugu film industry hold a rare record of screening on highest number of films i.e., 857+ in Guinness books. He is the only male actor in in the industry to hold the record\",\r\n    \"Tollywood's Original Name Was Tollygunje\",\r\n  ],\r\n  hindi: [\r\n    \" Mickey Mouse's original name? Mortimer.\",\r\n    \"Many filmmakers felt Thomas Edison held a monopoly on film\",\r\n    \"The first drive-in theater opened in 1933\",\r\n    \"The largest film market outside the United States is China  \",\r\n  ],\r\n};\r\n\r\nconst getRandomFunFact = (language) => {\r\n  const funFactsBasedonLanguage = funFacts[language];\r\n  return funFactsBasedonLanguage[\r\n    Math.floor(Math.random() * funFactsBasedonLanguage.length)\r\n  ];\r\n};\r\n\r\nconst controls = {\r\n  start: {\r\n    response:\r\n      \"Hi! I'm CineBot your movie recommendtion system. May I know your name?\",\r\n    options: [\r\n      {\r\n        label: \"Hey CiniBot ! This is user_name\",\r\n        gotoKey: \"user_name\",\r\n        contronType: \"input\",\r\n      },\r\n    ],\r\n  },\r\n  startover: {\r\n    response:\r\n      \"Thanks for using Cinebot, Hope you enjoyed the movie, Let's see what do you like to see next ?\",\r\n    options: [{ label: \"Recommend a Movie\", gotoKey: \"recommend_a_movie\" }],\r\n  },\r\n  user_name: {\r\n    response:\r\n      \"Hello user_name, can I know your age for better recommendations?\",\r\n    options: [\r\n      {\r\n        label: \"My age is user_age !!\",\r\n        gotoKey: \"user_age\",\r\n        contronType: \"input\",\r\n      },\r\n    ],\r\n  },\r\n  user_age: {\r\n    response: \"user_age Sweet, Let's see how can I help?\",\r\n    options: [{ label: \"Recommend a Movie\", gotoKey: \"recommend_a_movie\" }],\r\n  },\r\n  recommend_a_movie: {\r\n    response:\r\n      \"Movie Today seems Perfect, which languages do you Prefer today ?\",\r\n    options: [\r\n      { label: \"English\", gotoKey: \"english\" },\r\n      { label: \"Hindi\", gotoKey: \"hindi\" },\r\n      { label: \"Telugu\", gotoKey: \"telugu\" },\r\n    ],\r\n  },\r\n  english: {\r\n    response: `Fun Fact, ${getRandomFunFact(\"english\")}`,\r\n    options: [\r\n      { label: \"Action\", gotoKey: \"english_action\" },\r\n      { label: \"Drama\", gotoKey: \"english_drama\" },\r\n      { label: \"Sci-Fi\", gotoKey: \"english_scifi\" },\r\n      { label: \"Fantasy\", gotoKey: \"english_fantasy\" },\r\n      { label: \"Adventure\", gotoKey: \"english_adventure\" },\r\n      { label: \"Comedy\", gotoKey: \"english_comedy\" },\r\n      { label: \"Romance\", gotoKey: \"english_romance\" },\r\n      { label: \"Crime\", gotoKey: \"english_crime\" },\r\n      { label: \"Animation\", gotoKey: \"english_animation\" },\r\n      { label: \"Thriller\", gotoKey: \"english_thriller\" },\r\n      { label: \"Biography\", gotoKey: \"english_biography\" },\r\n      { label: \"Random\", gotoKey: \"english_all_movies\" },\r\n    ],\r\n  },\r\n  telugu: {\r\n    response: `Fun Fact, ${getRandomFunFact(\"telugu\")}`,\r\n    options: [\r\n      { label: \"Action\", gotoKey: \"telugu_action\" },\r\n      { label: \"Drama\", gotoKey: \"telugu_drama\" },\r\n      { label: \"Sci-Fi\", gotoKey: \"telugu_scifi\" },\r\n      { label: \"Fantasy\", gotoKey: \"telugu_fantasy\" },\r\n      { label: \"Adventure\", gotoKey: \"telugu_adventure\" },\r\n      { label: \"Comedy\", gotoKey: \"telugu_comedy\" },\r\n      { label: \"Romance\", gotoKey: \"telugu_romance\" },\r\n      { label: \"Crime\", gotoKey: \"telugu_crime\" },\r\n      { label: \"Thriller\", gotoKey: \"telugu_thriller\" },\r\n      { label: \"Biography\", gotoKey: \"telugu_biography\" },\r\n      { label: \"Random\", gotoKey: \"telugu_all_movies\" },\r\n    ],\r\n  },\r\n  hindi: {\r\n    response: `Fun Fact, ${getRandomFunFact(\"hindi\")}`,\r\n    options: [\r\n      { label: \"Suspense\", gotoKey: \"hindi_suspense\" },\r\n      { label: \"Action\", gotoKey: \"hindi_action\" },\r\n      { label: \"Drama\", gotoKey: \"hindi_drama\" },\r\n      { label: \"Sci-Fi\", gotoKey: \"hindi_scifi\" },\r\n      { label: \"Fantasy\", gotoKey: \"hindi_fantasy\" },\r\n      { label: \"Adventure\", gotoKey: \"hindi_adventure\" },\r\n      { label: \"Comedy\", gotoKey: \"hindi_comedy\" },\r\n      { label: \"Romance\", gotoKey: \"hindi_romance\" },\r\n      { label: \"Crime\", gotoKey: \"hindi_crime\" },\r\n      { label: \"Thriller\", gotoKey: \"hindi_thriller\" },\r\n      { label: \"Biography\", gotoKey: \"hindi_biography\" },\r\n      { label: \"Musical\", gotoKey: \"hindi_musical\" },\r\n      { label: \"Random\", gotoKey: \"hindi_all_movies\" },\r\n\r\n    ],\r\n  },\r\n  english_action: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22action%22\",\r\n  },\r\n  english_drama: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22drama%22\",\r\n  },\r\n  english_scifi: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22scifi%22\",\r\n  },\r\n  english_fantasy: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22fantasy%22\",\r\n  },\r\n  english_adventure: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22adventure%22\",\r\n  },\r\n  english_comedy: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22comedy%22\",\r\n  },\r\n  english_romance: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22romance%22\",\r\n  },\r\n  english_crime: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22crime%22\",\r\n  },\r\n  english_animation: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22animation%22\",\r\n  },\r\n  english_thriller: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22thriller%22\",\r\n  },\r\n  english_biography: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22&genres=%22biography%22\",\r\n  },\r\n  english_all_movies: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22english%22\",\r\n  },\r\n  \r\n  telugu_action: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22action%22\",\r\n  },\r\n  telugu_drama: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22drama%22\",\r\n  },\r\n  telugu_scifi: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22scifi%22\",\r\n  },\r\n  telugu_fantasy: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22fantasy%22\",\r\n  },\r\n  telugu_adventure: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22adventure%22\",\r\n  },\r\n  telugu_comedy: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22comedy%22\",\r\n  },\r\n  telugu_romance: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22romance%22\",\r\n  },\r\n  telugu_crime: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22crime%22\",\r\n  },\r\n\r\n  telugu_thriller: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22thriller%22\",\r\n  },\r\n  telugu_biography: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22biography%22\",\r\n  },\r\n  telugu_all_movies: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22\",\r\n  },\r\n\r\n  hindi_action: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22action%22\",\r\n  },\r\n  hindi_drama: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22drama%22\",\r\n  },\r\n  hindi_scifi: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22scifi%22\",\r\n  },\r\n  hindi_fantasy: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22fantasy%22\",\r\n  },\r\n  hindi_adventure: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22adventure%22\",\r\n  },\r\n  hindi_comedy: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22comedy%22\",\r\n  },\r\n  hindi_romance: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22romance%22\",\r\n  },\r\n  hindi_crime: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22crime%22\",\r\n  },\r\n  hindi_musical: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22musical%22\",\r\n  },\r\n  hindi_thriller: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22thriller%22\",\r\n  },\r\n  hindi_biography: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22biography%22\",\r\n  },\r\n  hindi_suspense: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22&genres=%22suspense%22\",\r\n  },\r\n  hindi_all_movies: {\r\n    response: \"Great, I have these recommendations for you\",\r\n    options: [],\r\n    recommendations:\r\n      \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22hindi%22\",\r\n  },\r\n};\r\n\r\nexport default controls;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { Button, List, Card, Avatar, Typography, Input, Image } from \"antd\";\r\nconst { Text, Title } = Typography;\r\nimport ottIcons from \"./ottIcons.json\";\r\n\r\nconst MovieDetails = ({ label, value }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", flex: 1 }}>\r\n      <Text\r\n        style={{ display: \"flex\", flex: 0.8, justifyContent: \"flex-start\" }}\r\n      >\r\n        {label}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        : {value}\r\n      </Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MovieCard = ({ selectedMovie }) => {\r\n  const {\r\n    actor_name,\r\n    category,\r\n    genres,\r\n    imdb_rating,\r\n    music_director,\r\n    ott_paltform,\r\n    actress_name,\r\n    certification,\r\n    director,\r\n    language,\r\n    name,\r\n    year,\r\n    storyline,\r\n    posterURL,\r\n    platforms,\r\n    platform_links,\r\n    ...rest\r\n  } = selectedMovie;\r\n\r\n  const parsedPlatforms = platforms.split(\",\");\r\n  const parsedPlatformLinks = platform_links.split(\",\");\r\n  const makeOttLinks = parsedPlatforms.map((platform, index) => {\r\n    return {\r\n      platform,\r\n      link: parsedPlatformLinks[index],\r\n    };\r\n  });\r\n  console.log(\r\n    \"🚀 ~ file: MovieCard.js ~ line 57 ~ makeOttLinks ~ makeOttLinks\",\r\n    makeOttLinks\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div>\r\n          <Text\r\n            style={{\r\n              fontSize: \"25px\",\r\n              // marginLeft: 30,\r\n              flex: 1,\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {name}\r\n          </Text>\r\n          <Text>({year})</Text>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          margin: 10,\r\n          //  flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 0.5,\r\n            backgroundColor: \"#eee\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Image\r\n            width={150}\r\n            src={posterURL}\r\n            style={{\r\n              display: \"flex\",\r\n              flex: 1,\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            padding: 16,\r\n          }}\r\n        >\r\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\r\n          <MovieDetails label={\"Actress Name\"} value={actress_name} />\r\n          <MovieDetails label={\"Movie Director\"} value={director} />\r\n          <MovieDetails label={\"Music Director\"} value={music_director} />\r\n          <MovieDetails label={\"Genres\"} value={genres} />\r\n          <MovieDetails label={\"Category\"} value={category} />\r\n          <MovieDetails label={\"IMDB\"} value={imdb_rating} />\r\n          <MovieDetails label={\"Certification\"} value={certification}/>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          //background: \"yellow\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          margin: 5,\r\n          // justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            //background: \"red\",\r\n            flex: 0.3,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            padding: 3,\r\n          }}\r\n        >\r\n          {makeOttLinks.map(({ platform, link }) => (\r\n            <a href={link} target=\"_blank\">\r\n              <Avatar\r\n                key={platform}\r\n                src={ottIcons[platform]}\r\n                size={\"large\"}\r\n                style={{ margin: 10 }}\r\n              />\r\n            </a>\r\n          ))}\r\n        </div>\r\n        <div style={{ borderLeft: \"1px solid black\", padding: 10 }}>\r\n          <Text\r\n            style={{\r\n              alignSelf: \"flex-start\",\r\n              display: \"flex\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            Storyline\r\n          </Text>\r\n          <Text>{storyline}</Text>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","export default (movies, url, user_age) => {\r\n  console.log(\r\n    \"🚀 ~ file: getFilteredMovies.js ~ line 2 ~ movies, url, user_age\",\r\n    movies,\r\n    url,\r\n    user_age\r\n  );\r\n  let filtersApplied = url\r\n    .split(\"?\")[1]\r\n    .split(\"&\")\r\n    .map((each) => {\r\n      const param = each.replace(\"%22\", \"\").split(\"=\");\r\n      return { [param[0]]: param[1].replace(\"%22\", \"\") };\r\n    });\r\n  console.log(\r\n    \"🚀 ~ file: getFilteredMovies.js ~ line 15 ~ filtersApplied\",\r\n    filtersApplied\r\n  );\r\n\r\n  filtersApplied = Object.assign({}, ...filtersApplied);\r\n\r\n  const seletedGenre = filtersApplied?.genres?.toLowerCase();\r\n  let filteredMovies = getFilteredMoviesByAge(movies, user_age);\r\n\r\n  console.log(\"Movies after Age Filter\", filteredMovies);\r\n\r\n  if (seletedGenre) {\r\n    filteredMovies = filteredMovies.filter((movie) => {\r\n      if (movie.genres.toLowerCase().indexOf(seletedGenre) > -1) {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n  console.log(\r\n    \"🚀 ~ file: getFilteredMovies.js ~ line 24 ~ filteredMovies\",\r\n    filteredMovies\r\n  );\r\n\r\n  return filteredMovies.sort(() => Math.random() - 0.5);\r\n};\r\n\r\nconst getFilteredMoviesByAge = (movies, age) => {\r\n  const filteredMovies = movies.filter((movie) => {\r\n    if (age > 17) {\r\n      return true;\r\n    } else if (age <= 17 && age >= 8) {\r\n      return (\r\n        movie.certification.toLowerCase() == \"u\" ||\r\n        movie.certification.toLowerCase() == \"ua\"\r\n      );\r\n    } else if (age <= 7) {\r\n      return movie.certification.toLowerCase() == \"u\";\r\n    }\r\n  });\r\n\r\n  return filteredMovies;\r\n};\r\n","import \"./styles.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  List,\r\n  Card,\r\n  Avatar,\r\n  Typography,\r\n  Image,\r\n  Modal,\r\n  Input,\r\n} from \"antd\";\r\nconst { Text } = Typography;\r\nconst { Meta } = Card;\r\nimport controls from \"./controls\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport getFilteredMovies from \"./getFilteredMovies\";\r\n\r\nexport default function App() {\r\n  const [chatMessages, setChatMessages] = useState([\r\n    { text: controls.start.response, isBot: true },\r\n  ]);\r\n  const [userDetails, setUserDetails] = useState({\r\n    user_name: \"\",\r\n    user_age: 17,\r\n  });\r\n  const inputRef = useRef(null);\r\n\r\n  const [message, setMessage] = useState(controls.start);\r\n  const [selectedMovie, setSelectedMovie] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const bottomRef = useRef(null);\r\n  const [recommendations, setRecommendations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 👇️ scroll to bottom every time messages change\r\n    // fetchFromDatabase(\r\n    //   \"https://cinebot-81244-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json?orderBy=%22language%22&equalTo=%22telugu%22&genres=%22comedy%22\"\r\n    // );\r\n    inputRef?.current?.focus({\r\n      cursor: \"start\",\r\n    });\r\n\r\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chatMessages]);\r\n\r\n  const fetchFromDatabase = (url) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const flattendResponse = Object.keys(res).map((key) => res[key]);\r\n        const filteredMovies = getFilteredMovies(\r\n          flattendResponse,\r\n          url,\r\n          userDetails.user_age\r\n        );\r\n        setRecommendations(filteredMovies);\r\n      });\r\n  };\r\n\r\n  const handleMovieSelection = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const getFormattedResponse = (text) => {\r\n    return text\r\n      .replace(\r\n        \"user_name\",\r\n        userDetails.user_name ? userDetails.user_name : \"Movie Buff\"\r\n      )\r\n      .replace(\"user_age\", userDetails.user_age);\r\n  };\r\n\r\n  const handleUserTextInput = (e, option) => {\r\n    if (option.gotoKey === \"user_age\") {\r\n      if (!isNaN(e.target.value) && e.target.value <= 100) {\r\n        setUserDetails((userDetails) => {\r\n          return {\r\n            ...userDetails,\r\n            [option.gotoKey]: e.target.value,\r\n          };\r\n        });\r\n      }\r\n    } else {\r\n      setUserDetails((userDetails) => {\r\n        return {\r\n          ...userDetails,\r\n          [option.gotoKey]: e.target.value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelection = (botResponse, userResponse) => {\r\n    if (!botResponse.options.length) {\r\n      fetchFromDatabase(botResponse.recommendations);\r\n    }\r\n\r\n    setMessage(botResponse);\r\n    setChatMessages([\r\n      ...chatMessages,\r\n      { text: userResponse.label, isBot: false },\r\n      { text: botResponse.response, isBot: true },\r\n    ]);\r\n    window.scrollTo({\r\n      bottom: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const handleStartOver = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedMovie({});\r\n    setRecommendations([]);\r\n    setMessage(controls.recommend_a_movie);\r\n    setChatMessages([{ text: controls.startover.response, isBot: true }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Card\r\n        style={{\r\n          // boxShadow: \" -2px 3px 7px -3px rgba(0,0,0,0.57)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h1>CineBot </h1>\r\n      </Card>\r\n      <Modal\r\n        width={600}\r\n        open={isModalOpen}\r\n        onOk={handleOk}\r\n        onCancel={handleOk}\r\n        size=\"large\"\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleOk} shape=\"round\" ref={inputRef}>\r\n            Back\r\n          </Button>,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            // loading={loading}\r\n            onClick={handleStartOver}\r\n          >\r\n            Start Over\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <MovieCard selectedMovie={selectedMovie} />\r\n      </Modal>\r\n      <div className=\"chat\">\r\n        {chatMessages.map(({ isBot, text }) => {\r\n          return isBot ? (\r\n            <div\r\n              key={text}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignSelf: \"flex-end\",\r\n                  zIndex: 10,\r\n                  margin: 5,\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    <Image\r\n                      src=\"https://raw.githubusercontent.com/belvenkat/Cinebot/main/cinebot.jpg\"\r\n                      style={{ width: 32 }}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"yours messages\">\r\n                <div className=\"message last\">\r\n                  <div>{getFormattedResponse(text)}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div key={text}>\r\n              <div className=\"mine messages\">\r\n                <div className=\"message last\">\r\n                  {\" \"}\r\n                  {getFormattedResponse(text)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div\r\n          style={{\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"flex-end\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            marginLeft: \"40%\",\r\n          }}\r\n        >\r\n          {message.options.map((option) => {\r\n            if (option.contronType === \"input\") {\r\n              return (\r\n                <div\r\n                  key={option.gotoKey}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    key={option.gotoKey}\r\n                    placeholder=\"type here\"\r\n                    className=\"user-input\"\r\n                    ref={inputRef}\r\n                    style={{\r\n                      //padding: 10,\r\n                      textAlign: \"center\",\r\n                      width: \"60%\",\r\n                      borderBottomColor: \"black\",\r\n                      borderBottomWidth: \"1px\",\r\n                      borderLeft: \"none\",\r\n                      borderRight: \"none\",\r\n                      borderTop: \"none\",\r\n                      outline: \"none\",\r\n                    }}\r\n                    onPressEnter={(e) => {\r\n                      setUserDetails((userDetails) => {\r\n                        return {\r\n                          ...userDetails,\r\n                          [option.gotoKey]: e.target.value,\r\n                        };\r\n                      });\r\n                      handleSelection(controls[option.gotoKey], option);\r\n                    }}\r\n                    onChange={(e) => handleUserTextInput(e, option)}\r\n                    value={userDetails[option.gotoKey]}\r\n                  />\r\n                </div>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <Button\r\n                ref={inputRef}\r\n                key={option.gotoKey}\r\n                shape=\"round\"\r\n                style={{\r\n                  margin: 10,\r\n                  flex: 1,\r\n                }}\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  handleSelection(controls[option.gotoKey], option);\r\n                }}\r\n              >\r\n                {getFormattedResponse(option.label)}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          background: \"#ececec\",\r\n          width: 400,\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {recommendations.map(({ posterURL, name, year }, index) => {\r\n          return (\r\n            <Card\r\n              key={name}\r\n              onClick={() => handleMovieSelection(recommendations[index])}\r\n              style={{ margin: 5, cursor: \"pointer\" }}\r\n              cover={\r\n                <img\r\n                  style={{ width: 240, margin: 10, height: 240 }}\r\n                  alt=\"movie name\"\r\n                  src={posterURL}\r\n                />\r\n              }\r\n            >\r\n              <Meta title={name} description={year} />\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n      <div ref={bottomRef} style={{ height: 150 }} />\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}