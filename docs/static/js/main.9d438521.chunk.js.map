{"version":3,"sources":["MovieCard.js","App.js","index.js"],"names":["Text","Typography","MovieDetails","Title","label","value","style","display","flex","justifyContent","MovieCard","selectedMovie","actor_name","category","genres","imdb_rating","name","music_director","ott_paltform","actress_name","certification","director","language","year","storyline","posterURL","platforms","platform_links","parsedPlatforms","split","parsedPlatformLinks","makeOttLinks","map","platform","index","link","console","log","flexDirection","fontSize","margin","backgroundColor","alignItems","width","src","padding","href","target","ottIcons","size","borderLeft","alignSelf","Meta","Card","App","useState","text","controls","recommand_a_movie","response","isBot","chatMessages","setChatMessages","user_name","user_age","userDetails","setUserDetails","inputRef","useRef","start","message","setMessage","setSelectedMovie","isModalOpen","setIsModalOpen","bottomRef","recommandations","setRecommandations","useEffect","current","scrollIntoView","behavior","focus","cursor","getFormattedResponse","replace","handleSelection","botResponse","userResponse","url","options","length","fetch","then","res","json","Object","keys","key","window","scrollTo","bottom","handleOk","className","open","onOk","onCancel","footer","onClick","type","zIndex","option","contronType","placeholder","ref","textAlign","borderBottomColor","borderBottomWidth","borderRight","borderTop","outline","onPressEnter","e","gotoKey","onChange","background","overflowX","movie","cover","height","alt","title","description","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.9d438521.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { Button, List, Card, Avatar, Typography, Input, Image } from \"antd\";\nconst { Text, Title } = Typography;\nimport ottIcons from \"./ottIcons.json\";\n\nconst MovieDetails = ({ label, value }) => {\n  return (\n    <div style={{ display: \"flex\", flex: 1 }}>\n      <Text\n        style={{ display: \"flex\", flex: 0.5, justifyContent: \"flex-start\" }}\n      >\n        {label}\n      </Text>\n      <Text\n        style={{\n          display: \"flex\",\n          flex: 1,\n          justifyContent: \"flex-start\",\n        }}\n      >\n        : {value}\n      </Text>\n    </div>\n  );\n};\n\nconst MovieCard = ({ selectedMovie }) => {\n  const {\n    actor_name,\n    category,\n    genres,\n    imdb_rating,\n    music_director,\n    ott_paltform,\n    actress_name,\n    certification,\n    director,\n    language,\n    name,\n    year,\n    storyline,\n    posterURL,\n    platforms,\n    platform_links,\n    ...rest\n  } = selectedMovie;\n\n  const parsedPlatforms = platforms.split(\",\");\n  const parsedPlatformLinks = platform_links.split(\",\");\n  const makeOttLinks = parsedPlatforms.map((platform, index) => {\n    return {\n      platform,\n      link: parsedPlatformLinks[index],\n    };\n  });\n  console.log(\n    \"🚀 ~ file: MovieCard.js ~ line 57 ~ makeOttLinks ~ makeOttLinks\",\n    makeOttLinks\n  );\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div>\n          <Text\n            style={{\n              fontSize: \"25px\",\n              // marginLeft: 30,\n              flex: 1,\n              justifyContent: \"flex-end\",\n            }}\n          >\n            {name}\n          </Text>\n          <Text>({year})</Text>\n        </div>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          margin: 10,\n          //  flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flex: 0.5,\n            backgroundColor: \"#eee\",\n            alignItems: \"center\",\n          }}\n        >\n          <Image\n            width={150}\n            src={posterURL}\n            style={{ display: \"flex\", flex: 1 }}\n          />\n        </div>\n        <div\n          style={{\n            flex: 1,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            padding: 15,\n          }}\n        >\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\n          <MovieDetails label={\"Genres\"} value={genres} />\n          <MovieDetails label={\"Category\"} value={category} />\n          <MovieDetails label={\"IMDB\"} value={imdb_rating} />\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\n          <MovieDetails label={\"Actor Name\"} value={actor_name} />\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          //background: \"yellow\",\n          flex: 1,\n          flexDirection: \"column\",\n          margin: 5,\n          // justifyContent: \"flex-end\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            //background: \"red\",\n            flex: 0.3,\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n            padding: 3,\n          }}\n        >\n          {makeOttLinks.map(({ platform, link }) => (\n            <a href={link} target=\"_blank\">\n              <Avatar\n                key={platform}\n                src={ottIcons[platform]}\n                size={\"large\"}\n                style={{ margin: 10 }}\n              />\n            </a>\n          ))}\n        </div>\n        <div style={{ borderLeft: \"1px solid black\", padding: 10 }}>\n          <Text\n            style={{\n              alignSelf: \"flex-start\",\n              display: \"flex\",\n              fontSize: \"20px\",\n            }}\n          >\n            Storyline\n          </Text>\n          <Text>{storyline}</Text>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import \"./styles.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport {\n  Button,\n  List,\n  Card,\n  Avatar,\n  Typography,\n  Input,\n  Image,\n  Modal,\n} from \"antd\";\nconst { Text } = Typography;\nconst { Meta } = Card;\nimport controls from \"./controls.json\";\nimport MovieCard from \"./MovieCard\";\nimport getFilteredMovies from \"./getFilteredMovies\";\n\nexport default function App() {\n  const [chatMessages, setChatMessages] = useState([\n    { text: controls.recommand_a_movie.response, isBot: true },\n  ]);\n  const [userDetails, setUserDetails] = useState({\n    user_name: \"\",\n    user_age: \"\",\n  });\n  const inputRef = useRef(null);\n\n  const [message, setMessage] = useState(controls.start);\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const bottomRef = useRef(null);\n  const [recommandations, setRecommandations] = useState([]);\n\n  useEffect(() => {\n    // 👇️ scroll to bottom every time messages change\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    inputRef?.current?.focus({\n      cursor: \"start\",\n    });\n  }, [chatMessages]);\n\n  const fetchFromDatabase = (url) => {\n    console.log(\"🚀 ~ file: App.js ~ line 44 ~ fetchFromDatabase ~ url\", url);\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        const filteredMovies = getFilteredMovies(url);\n        setRecommandations(Object.keys(res).map((key) => res[key]));\n      });\n  };\n\n  const handleMovieSelection = (movie) => {\n    setSelectedMovie(movie);\n    setIsModalOpen(true);\n  };\n\n  const getFormattedResponse = (text) => {\n    return text\n      .replace(\"user_name\", userDetails.user_name)\n      .replace(\"user_age\", userDetails.user_age);\n  };\n\n  const handleSelection = (botResponse, userResponse) => {\n    if (!botResponse.options.length) {\n      fetchFromDatabase(botResponse.recommandations);\n    }\n\n    setMessage(botResponse);\n    setChatMessages([\n      ...chatMessages,\n      { text: userResponse.label, isBot: false },\n      { text: botResponse.response, isBot: true },\n    ]);\n    window.scrollTo({\n      bottom: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return (\n    <div className=\"App\">\n      <Modal\n        open={isModalOpen}\n        onOk={handleOk}\n        onCancel={handleOk}\n        footer={[\n          <Button key=\"back\" onClick={handleOk}>\n            Back\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            // loading={loading}\n            onClick={handleOk}\n          >\n            Start Over\n          </Button>,\n        ]}\n      >\n        <MovieCard selectedMovie={selectedMovie} />\n      </Modal>\n      <div className=\"chat\">\n        {chatMessages.map(({ isBot, text }) => {\n          return isBot ? (\n            <div\n              key={text}\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  alignSelf: \"flex-end\",\n                  zIndex: 10,\n                  margin: 5,\n                }}\n              >\n                <Avatar\n                  src={\n                    <Image\n                      src=\"https://joeschmoe.io/api/v1/random\"\n                      style={{ width: 32 }}\n                    />\n                  }\n                />\n              </div>\n              <div className=\"yours messages\">\n                <div className=\"message last\">\n                  <div>{getFormattedResponse(text)}</div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div className=\"mine messages\" key={text}>\n                <div className=\"message last\">\n                  {\" \"}\n                  {getFormattedResponse(text)}\n                </div>\n              </div>\n            </>\n          );\n        })}\n        {/* <div className=\"mine messages\">\n          <div className=\"message last\">Dude</div>\n        </div>\n        <div className=\"yours messages\">\n          <div className=\"message\">Hey!</div>\n          <div className=\"message\">You there?</div>\n          <div className=\"message last\">Hello, how's it going?</div>\n        </div>\n        <div className=\"mine messages\">\n          <div className=\"message\">Great thanks!</div>\n          <div className=\"message last\">How about you?</div>\n        </div> */}\n        {/* {chatMessages.map(({ isBot, text }) => {\n          return isBot ? (\n            <List.Item\n              key={text}\n              style={{\n                // background: \"coral\",\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                width: \"300px\",\n                border: \"solid 1px #EEE\",\n                flexDirection: \"column\",\n                padding: \"10px\"\n              }}\n            >\n              <Avatar>Bot</Avatar>\n              <Text type=\"secondary\" style={{ padding: 10 }}>\n                {getFormattedResponse(text)}\n              </Text>\n            </List.Item>\n          ) : (\n            <List.Item\n              key={text}\n              style={{\n                // background: \"yellow\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\"\n              }}\n            >\n              <Text type=\"secondary\" style={{ padding: 10 }}>\n                {getFormattedResponse(text)}\n              </Text>\n              <Avatar>{userDetails.user_name[0]}</Avatar>\n            </List.Item>\n          );\n        })} */}\n\n        {/* <div>Bot: {message.response}</div> */}\n        {message.options.map((option) => {\n          if (option.contronType === \"input\") {\n            return (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Input\n                  key={option.gotoKey}\n                  placeholder=\"type here\"\n                  className=\"user-input\"\n                  ref={inputRef}\n                  style={{\n                    //padding: 10,\n                    textAlign: \"center\",\n                    width: \"40%\",\n                    borderBottomColor: \"black\",\n                    borderBottomWidth: \"1px\",\n                    borderLeft: \"none\",\n                    borderRight: \"none\",\n                    borderTop: \"none\",\n                    outline: \"none\",\n                  }}\n                  //bordered={false}\n                  onPressEnter={(e) => {\n                    setUserDetails((userDetails) => {\n                      return {\n                        ...userDetails,\n                        [option.gotoKey]: e.target.value,\n                      };\n                    });\n                    handleSelection(controls[option.gotoKey], option);\n                  }}\n                  onChange={(e) => {\n                    setUserDetails((userDetails) => {\n                      return {\n                        ...userDetails,\n                        [option.gotoKey]: e.target.value,\n                      };\n                    });\n                  }}\n                  value={userDetails[option.gotoKey]}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <Button\n              key={option.gotoKey}\n              style={{ margin: 10 }}\n              type=\"primary\"\n              onClick={() => {\n                handleSelection(controls[option.gotoKey], option);\n              }}\n            >\n              {getFormattedResponse(option.label)}\n            </Button>\n          );\n        })}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          background: \"#ececec\",\n          width: 500,\n          overflowX: \"scroll\",\n        }}\n      >\n        {recommandations.map(({ posterURL, name, year }, index) => {\n          return (\n            <Card\n              key={name}\n              onClick={() => handleMovieSelection(recommandations[index])}\n              style={{ margin: 5 }}\n              cover={\n                <img\n                  style={{ width: 240, margin: 10, height: 240 }}\n                  alt=\"movie name\"\n                  src={posterURL}\n                />\n              }\n            >\n              <Meta title={name} description={year} />\n            </Card>\n          );\n        })}\n      </div>\n      <div ref={bottomRef} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}